name: Creating data
run-name: creating data
on: 
  push:
    branches:
      - data
jobs:
  Prepare-Data:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install orgparse
          python3 -m pip install requests

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '20.x'

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: master
          path: build

      - name: Checkout data
        uses: actions/checkout@v4
        with:
          ref: data
          path: data

      - name: Copy org data
        run: cp -r data/data build/data

      - name: Move cached data
        run: mv data/dist build/dist

      - name: Build
        working-directory: ./build
        run: make

      - name: Move updated cached data back
        run: mv build/dist data/dist

      - name: Commit changes
        working-directory: ./data
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore(auto): Update data"
            git push origin data
          else
            echo "No changes to commit"
          fi

  Publish:
    runs-on: ubuntu-latest
    needs: Prepare-Data
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '20.x'

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: master
          path: build
      - name: Checkout data
        uses: actions/checkout@v4
        with:
          ref: data
          path: data

      - name: Copy json data
        run: |
          mkdir -p build/page/src/data/
          cp data/dist/albumy.json build/page/src/data/

      - name: Copy images
        run: |
          mkdir -p build/page/public/
          cp -r data/dist/*.jpg build/page/public/
          cp -r data/data/empty.jpg build/page/public/

      - name: Debug
        run: tree -L 3

      - name: Install astro dependencies
        working-directory: ./build/page
        run: npm ci

      - name: Build
        working-directory: ./build/page
        run: npm run build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ID }}
          projectName: albumina
          directory: build/page/dist
